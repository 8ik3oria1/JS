"use strict";

// •	Какое будет выведено значение: let x = 5; alert( x++ ); ?
// let x = 5; alert( x++ ); // вот такая запись сначала вернет 5, а затем увеличит х на 1
// let x = 5; alert( ++x ); //сначала х увеличиться на 1, а затем вернет х = 6

// •	Чему равно такое выражение: [ ] + false - null + true ?
//[ ] + false - null + true
//console.log(typeof([]+false)); //string
//console.log([] + false - null); //NaN
// console.log([] + false - null + true); //NaN

// •	Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?

// let y = 1; 
// let x = y = 2; //последовательное присваивание с права налево
// alert(x); //2

// •	Чему равна сумма [ ] + 1 + 2?

//console.log([ ] + 1 + 2); // "12"

// •	Что выведет этот код: alert( "1"[0] )?

//alert( "1"[0] ); //1

// •	Чему равно 2 && 1 && null && 0 && undefined ?

//console.log(2 && 1 && null && 0 && undefined); //как только код споткнулся на чем-то ложном он и вернет это ложное,
// дальше код не идет!
//оператор ИЛИ запинается на правде!

// •	Есть ли разница между выражениями? !!( a && b ) и (a && b)?

// console.log(!!( 1 && 2 )); //true
// //!! - два знака НЕ превращают значение в булиновое
// console.log( 1 && 2 ); //2


// •	Что выведет этот код: alert( null || 2 && 3 || 4 ); ?

// console.log(null || 2 && 3 || 4 ); //3

// •	a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ? //нет

// const a = [1, 2, 3];
// const b = [1, 2, 3];
// console.log(a == b);

// •	Что выведет этот код: alert( +"Infinity" ); ?

// alert( +"Infinity" ); //infinity -> тип данных число

// •	Верно ли сравнение: "Ёжик" > "яблоко"?

// console.log("Ёжик" > "яблоко"); //сравнение идет посимвольно! Ё сравнивается с я и так далее

// •	Чему равно 0 || "" || 2 || undefined || true || falsе ?

//console.log(0 || "" || 2 || undefined || true || false); //"" в логическом контексте - это false!

