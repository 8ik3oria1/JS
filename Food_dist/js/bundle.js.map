{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,UAAU;;;;;;;;;;;;;;;ACxHyB;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,+BAA+B,UAAU,MAAM,SAAS;AACxD,sDAAsD,WAAW;AACjE,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA,gBAAgB;AAChB,YAAY,EAAE;AACd;AACA,QAAQ,gEAAY;AACpB,2BAA2B,eAAe,iCAAiC;AAC3E;AACA,qBAAqB;AACrB,iBAAiB;AACjB;;AAEA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC9DiC;AACL;;AAEhD;AACA;;AAEA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,kEAAkE;AAClE;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAgB,EAAE;;AAElB,gFAAgF;AAChF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,6BAA6B;AAC7B,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,qDAAqD;AACrD,2BAA2B;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;;;AAGA;AACA;;AAEA,mDAAmD;AACnD;AACA,QAAQ,uDAAS;;AAEjB;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,SAAS;;AAET;AACA;;AAEA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC3HpB;AACA;AACA;AACA;AACA,qCAAqC;AACrC,4CAA4C;AAC5C;AACA;AACA;AACA,oCAAoC;AACpC;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;;AAGA;AACA;;AAEA;AACA,uDAAuD;;AAEvD;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA,oEAAoE;AACpE;AACA;;AAEA;;;AAGA;;AAEA,iEAAe,WAAW,EAAC;AACP;;;;;;;;;;;;;;;AC5DpB,iBAAiB,qFAAqF;AACtG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA,mCAAmC,cAAc;AACjD,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;;AAER;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,WAAW;AACjD,SAAS;AACT;AACA;AACA;;AAEA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,yCAAyC,WAAW;AACpD,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,yCAAyC,WAAW;AACpD,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA,yDAAyD,OAAO;;;AAGhE;AACA,6CAA6C,WAAW;AACxD,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA,iEAAe,MAAM;;;;;;;;;;;;;;ACrNrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA,iEAAe,IAAI;;;;;;;;;;;;;;AChDnB;AACA;;AAEA,wCAAwC;AACxC;;AAEA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;;AAE1D,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,KAAK;;;;;;;;;;;;;;;ACtEpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,IAAI,YAAY,WAAW;AACpE;;AAEA;AACA;;AAEkB;;;;;;;UCtBlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA,UAAU,MAAM;;AAEkB;AAC6B;AACjB;AACV;AACA;AACE;AACF;AACpC,UAAU,WAAW;;AAErB;;AAEA,0CAA0C,+DAAS;;AAEnD,IAAI,yDAAI;AACR,IAAI,gEAAW;AACf,IAAI,+DAAU;AACd,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL,IAAI,0DAAK;;AAET,CAAC;;;AAGD,mE","sources":["webpack://food_dist/./js/modules/calculator.js","webpack://food_dist/./js/modules/cards.js","webpack://food_dist/./js/modules/forms.js","webpack://food_dist/./js/modules/modalWindow.js","webpack://food_dist/./js/modules/slider.js","webpack://food_dist/./js/modules/tabs.js","webpack://food_dist/./js/modules/timer.js","webpack://food_dist/./js/services/services.js","webpack://food_dist/webpack/bootstrap","webpack://food_dist/webpack/runtime/define property getters","webpack://food_dist/webpack/runtime/hasOwnProperty shorthand","webpack://food_dist/webpack/runtime/make namespace object","webpack://food_dist/./js/script.js"],"sourcesContent":["function calculator() {\n        //calculator\n\n        const result = document.querySelector('.calculating__result span');\n    \n        let sex, height, weight, age, ratio;\n    \n        if(localStorage.getItem('sex')){\n            sex = localStorage.getItem('sex');\n        } else {\n            sex = 'female';\n            localStorage.setItem('sex', 'female');\n        };\n    \n        if(localStorage.getItem('ratio')){\n            ratio = localStorage.getItem('ratio');\n        } else {\n            ratio = 1.375;\n            localStorage.setItem('ratio', 1.375);\n        };\n        \n        function initLocalSettings(selector, activeClass){\n            const elements = document.querySelectorAll(selector);\n    \n            elements.forEach(elem => {\n                elem.classList.remove(activeClass);\n                if (elem.getAttribute('id') === localStorage.getItem('sex')){\n                    elem.classList.add(activeClass);\n                }\n                if(elem.getAttribute('data-ratio') === localStorage.getItem('ratio')){\n                    elem.classList.add(activeClass);\n                }\n    \n            });\n        }\n    \n        initLocalSettings('#gender div', 'calculating__choose-item_active');\n        initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\n    \n        function calcTotal() {\n            if (!sex || !height || !weight || !age || !ratio){\n                result.textContent = 'Not enough data';\n                return;\n            }\n    \n            if (sex === 'female'){\n                result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age))*ratio);\n            } else {\n                result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\n            }\n        };\n    \n        calcTotal();\n    \n        function getStaticInformation(selector, activeClass) {\n            const elements = document.querySelectorAll(selector);\n    \n            elements.forEach(elem => {\n                elem.addEventListener('click', (e) => {\n                    if (e.target.getAttribute('data-ratio')) {\n                        ratio = +e.target.getAttribute('data-ratio');\n                        localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\n                    } else {\n                        sex = e.target.getAttribute('id');\n                        localStorage.setItem('sex', e.target.getAttribute('id'));\n                    }\n        \n                    elements.forEach(elem => {\n                        elem.classList.remove(activeClass);\n                    });\n        \n                    e.target.classList.add(activeClass);\n        \n                    calcTotal();\n                });\n            });\n        };\n    \n        getStaticInformation('#gender div', 'calculating__choose-item_active');\n        getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\n    \n        function getDynamicInformation(selector){\n            const input = document.querySelector(selector);\n    \n    \n            input.addEventListener('input', () => {\n    \n                if(input.value.match(/\\D/g)){\n                    input.style.border = '1px solid red';\n                } else {\n                    input.style.border = 'none';\n                }\n    \n                switch(input.getAttribute('id')){\n                    case 'height':\n                        height = +input.value;\n                        break;\n                    case 'weight':\n                        weight = +input.value;\n                        break;\n                    case 'age':\n                        age = +input.value;\n                        break;\n                }\n            calcTotal();\n            });\n    \n    \n        };\n    \n        getDynamicInformation('#height');\n        getDynamicInformation('#weight');\n        getDynamicInformation('#age');\n    \n    \n        fetch('http://localhost:3000/menu')\n            .then(data => data.json())\n            .then(res => console.log(res));\n}\n\nexport default calculator;","import {getResources} from \"../services/services\";\n\nfunction cards() {\n        //использовать классы для карточек\n\n        class MenuCard {\n            constructor(src, alt, title, descr, price, parentSelector, ...classes){\n                this.src = src;\n                this.alt = alt;\n                this.title = title;\n                this.descr = descr;\n                this.price = price;\n                this.classes = classes;//это массив и с ним нужно работать как с массивом дальше\n                this.parent = document.querySelector(parentSelector);\n                this.transfer = 27;\n                this.changeToUAH();\n    \n            }\n    \n    \n            changeToUAH(){\n                this.price = this.price * this.transfer;\n            }\n    \n            render(){\n                const element = document.createElement('div');\n    \n                if (this.classes.length === 0){\n                    this.element = 'menu__item';\n                    element.classList.add(this.element);\n                } else {\n                    this.classes.forEach(className => element.classList.add(className));\n                }\n                element.innerHTML = `\n                    <img src=${this.src} alt=${this.alt}>\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n                    <div class=\"menu__item-descr\">${this.descr}</div>\n                    <div class=\"menu__item-divider\"></div>\n                    <div class=\"menu__item-price\">\n                        <div class=\"menu__item-cost\">Цена:</div>\n                        <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\n                    </div>\n                `;\n                this.parent.append(element);\n            }\n        }\n    \n    \n        // getResources('http://localhost:3000/menu')\n        // .then(data => {\n        //     data.forEach(({img, altimg, title, descr, price}) => {\n        //         new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\n        //     });\n        // });//перебирает все объекты которые придут с сервера и соответственно выведут в меню\n    \n        getResources('http://localhost:3000/menu')\n            .then(data => {data.forEach(({img, altimg, title, descr, price}) => {\n                        new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\n                    });\n                });\n}\n\nexport default cards;","import { closeModal, openModal} from \"./modalWindow\";\nimport { postData } from \"../services/services\";\n\nfunction forms(formSelector, modalTimerId) {\n    //forms\n\n    const forms = document.querySelectorAll(formSelector);\n\n    const message = {//список фраз что будут показываться юезру после сабмита\n        loading: 'img/form/spinner.svg',\n        success:'спасибо, скоро мы свяжемся с вами!',\n        failure: 'что-то пошло не так'\n    };\n\n    forms.forEach(item => {\n        bindPostData(item);\n    });\n\n    \n\n    function bindPostData(form){\n        form.addEventListener('submit', (e) => {\n            e.preventDefault();//убрать стандартное поведение браузера на событие сабмит\n\n            const statusMessage = document.createElement('img');\n            //statusMessage.classList.add('status');\n            statusMessage.src = message.loading;//создаем изображение и подставили сразу атрибут src\n            statusMessage.style.cssText = `\n                display: block;\n                margin: 0 auto;\n            `; //добавляем стили \n            //statusMessage.textContent = message.loading;\n            //form.append(statusMessage);\n            form.insertAdjacentElement('afterend', statusMessage);//чтобы при разных модалках/формах спинер ничего не двигал\n            //и отображался красиво\n\n            //request.setRequestHeader('Content-Type', 'application/json');\n\n            const formData = new FormData(form);\n\n            // const object = {};\n            // formData.forEach(function(value, key){\n            //     object[key] = value;\n            // });//более элегантное решение смотри ниже\n\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));//берем формдату превращаем ее в массив массивов, а затем\n            //превращаем в классический объект и превращаем ее в json\n            //entries-из объекта сделать массив с массивами\n\n            // const request = new XMLHttpRequest();\n            // request.open('POST', 'server.php');\n            //заменяем на фетч\n            // fetch('server.php', {\n            //     method: \"POST\",\n            //     headers: {\n            //         'Content-Type': 'application/json'\n            //     },\n            //     body: JSON.stringify(object)\n            // })\n            postData('http://localhost:3000/requests', json)\n            // .then(data => data.text())//nсрока не нужна так как трансформация происходит на уровне функции postData\n            .then(data => {\n                console.log(data);\n                    //statusMessage.textContent = message.success;\n                    showThanksModal(message.success);\n                    statusMessage.remove();\n            }).catch(() => {\n                showThanksModal(message.failure);\n            }).finally(() => {\n                form.reset();//очистить форму после заполнения\n            });\n        });\n    }\n            //request.send(json);\n\n        //     request.addEventListener('load', () =>{\n        //         if(request.status === 200){\n        //             console.log(request.response);\n        //             //statusMessage.textContent = message.success;\n        //             showThanksModal(message.success);\n        //             statusMessage.remove();\n        //             form.reset();//очистить форму после заполнения\n        //             // setTimeout(() =>{\n        //             //     statusMessage.remove();//удалить сообщение со странице о статусе\n        //             // }, 2000);\n        //         } else {\n        //             showThanksModal(message.failure);\n        //             //statusMessage.textContent = message.failure;\n        //         }\n        //     });\n        // });\n    //}\n\n\n    function showThanksModal(message) {\n        const previousModalDialog = document.querySelector('.modal__dialog');\n\n        previousModalDialog.classList.add('hide'); //скрываем форму заполнения\n        //prevModalDialog.classList.add('hide');\n        openModal('.modal', modalTimerId);\n\n        const thanksModal = document.createElement('div');\n        thanksModal.classList.add('modal__dialog');//добавляем диву классу\n        //формируем верстку в этом новом окне \n        thanksModal.innerHTML = `\n            <div class=\"modal__content\">\n            <div class=\"modal__close\" data-close>×</div>\n            <div class=\"modal__title\">${message}</div>\n            </div>\n        `;\n\n        document.querySelector('.modal').append(thanksModal);\n        //далее мы должны сделать возмодность чтобы юзер мог еще раз заполнить форму\n        setTimeout(() => {\n            thanksModal.remove();\n            previousModalDialog.classList.add('show');\n            previousModalDialog.classList.remove('hide');\n            closeModal('.modal');\n        }, 4000);\n\n    }\n}\n\nexport default forms;","function openModal(modalSelector, modalTimerId) {\n    const modal = document.querySelector(modalSelector);\n    modal.classList.add('show');\n    modal.classList.remove('hide');\n    //modal.classList.toggle('show');//когда кликаем на тригер если класса нет то мы его добавим, если есть то уберем -- это тоже самое что две строчки выше\n    document.body.style.overflow = 'hidden';//чтобы страница при открытом модальном окне не прокручивалась\n    \n    console.log(modalTimerId);\n    if (modalTimerId) {\n        clearInterval(modalTimerId);//в случае если юзер по клику открыл уже окно\n    }\n};\n\nfunction closeModal(modalSelector){//вынесли в данную функцию повторяющийся код\n    const modal = document.querySelector(modalSelector);\n    modal.classList.add('hide');\n    modal.classList.remove('show');\n    //modal.classList.toggle('show');\n    document.body.style.overflow = '';//восстановить скролл после закрытия модального окна\n}\n\n\nfunction modalWindow(triggerSelector, modalSelector, modalTimerId) {\n    //модальное окно\n\n    const modalTrigger = document.querySelectorAll(triggerSelector), //обращение к нужным атрибутам\n        modal = document.querySelector(modalSelector); //отвечает за само модальное окно\n\n    \n\n    modalTrigger.forEach(btn => {\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\n    });\n\n    //сделать так чтобы модалка закрывалась по нажатию esc или н область вне окна\n    modal.addEventListener('click', (e) =>{\n        if(e.target === modal || e.target.getAttribute('data-close') == ''){\n            closeModal(modalSelector);\n        }\n    });\n\n    document.addEventListener('keydown', (e) => {\n        if(e.code === \"Escape\" && modal.classList.contains('show')){\n            closeModal(modalSelector);\n        }\n    });//закрыть окно по клавише эскейп\n\n    function showModalByScrool() {\n        if(window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1){\n            openModal(modalSelector, modalTimerId);\n            window.removeEventListener('scroll', showModalByScrool);//чтобы модалка появлялась только раз\n        }\n    }\n\n    window.addEventListener('scroll', showModalByScrool);\n\n\n}\n\nexport default modalWindow;\nexport {closeModal};\nexport {openModal};","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\n    //slider simple version\n\n    const slides = document.querySelectorAll(slide),\n        slider = document.querySelector(container),\n        next = document.querySelector(nextArrow),\n        prev = document.querySelector(prevArrow),\n        total = document.querySelector(totalCounter),\n        current = document.querySelector(currentCounter),\n        slidesWrapper = document.querySelector(wrapper),\n        slidesField = document.querySelector(field),\n        width = window.getComputedStyle(slidesWrapper).width;\n\n    let slideIndex = 1;\n    let offset = 0; \n\n    if(slides.length < 10){\n        total.textContent = `0${slides.length}`;\n        current.textContent = `0${slideIndex}`;\n    } else {\n        total.textContent = slides.length;\n        current.textContent = slideIndex;\n    }\n\n    // showSlides(slideIndex);\n\n    // if(slides.length < 10){\n    //     total.textContent = `0${slides.length}`;\n    // } else {\n    //     total.textContent = slides.length;\n    // }\n\n    // function showSlides(n){\n    //     if (n > slides.length){\n    //         slideIndex = 1;\n    //     }\n    //     if(n < 1){\n    //         slideIndex = slides.length;\n    //     }\n\n    //     slides.forEach(item => item.style.display = 'none');\n    //     slides[slideIndex-1].style.display = 'block';\n\n    //     if(slides.length < 10){\n    //         current.textContent = `0${slideIndex}`;\n    //     } else {\n    //         current.textContent = slideIndex;\n    //     }\n    // }\n    \n    // function plusSlides(n){\n    //     showSlides(slideIndex += n);\n    // }\n\n    // prev.addEventListener('click', () => {\n    //     plusSlides(-1);\n    // });\n    // next.addEventListener('click', () => {\n    //     plusSlides(1);\n    // });\n\n    //slider high level\n\n    slidesField.style.width = 100 * slides.length + '%';\n    slidesField.style.display = 'flex';\n    slidesField.style.transition = '0.5s all';\n\n    slidesWrapper.style.overflow = 'hidden';\n\n    slides.forEach(slide => {\n        slide.style.width = width;\n    });\n\n    slider.style.position = 'relative';\n\n    const indicators = document.createElement('ol'),\n        dots = [];\n    indicators.classList.add('carrousel-indicators');\n    indicators.style.cssText = `\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 15;\n        display: flex;\n        justify-content: center;\n        margin-right: 15%;\n        margin-left: 15%;\n        list-style: none;\n    `;\n\n    slider.append(indicators);\n\n    function dotSlider(){\n        dots.forEach(dot => dot.style.opacity = '.5');\n        dots[slideIndex - 1].style.opacity = 1;\n    };\n\n    function slidesCounter(){\n        if(slides.length < 10){\n            current.textContent = `0${slideIndex}`;\n        }else{\n            current.textContent = slideIndex;\n        }\n    };\n\n    for (let i = 0; i < slides.length; i++){\n        const dot = document.createElement('li');\n        dot.setAttribute('data-slide-to', i + 1);\n        dot.style.cssText = `\n            box-sizing: content-box;\n            flex: 0 1 auto;\n            width: 30px;\n            height: 6px;\n            margin-right: 3px;\n            margin-left: 3px;\n            cursor: pointer;\n            background-color: #fff;\n            background-clip: padding-box;\n            border-top: 10px solid transparent;\n            border-bottom: 10px solid transparent;\n            opacity: .5;\n            transition: opacity .6s ease;\n        `;\n        if(i == 0){\n            dot.style.opacity = 1;\n        }\n        indicators.append(dot);\n        dots.push(dot);\n    };\n\n    function deleteNotDigits(str){\n       return +str.replace(/\\D/g, '');\n    }\n\n    next.addEventListener('click', () => {\n        if (offset == deleteNotDigits(width) * (slides.length - 1)){\n            offset = 0;\n        } else {\n            offset += deleteNotDigits(width); \n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`;\n\n        if(slideIndex == slides.length){\n            slideIndex = 1;\n        } else {\n            slideIndex++;\n        }\n\n        // if(slides.length < 10){\n        //     current.textContent = `0${slideIndex}`;\n        // }else{\n        //     current.textContent = slideIndex;\n        // }\n        slidesCounter();\n\n        // dots.forEach(dot => dot.style.opacity = '.5');\n        // dots[slideIndex - 1].style.opacity = 1; \n        dotSlider();\n    });\n\n    prev.addEventListener('click', () => {\n        if (offset == 0){\n            offset = deleteNotDigits(width) * (slides.length - 1);\n        } else {\n            offset -= deleteNotDigits(width);\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`;\n\n        if(slideIndex == 1){\n            slideIndex = slides.length;\n        } else {\n            slideIndex--;\n        }\n\n        // if(slides.length < 10){\n        //     current.textContent = `0${slideIndex}`;\n        // }else{\n        //     current.textContent = slideIndex;\n        // }\n        slidesCounter();\n\n        // dots.forEach(dot => dot.style.opacity = '.5');\n        // dots[slideIndex - 1].style.opacity = 1;\n        dotSlider();\n    });\n\n    dots.forEach(dot => {\n        dot.addEventListener('click', (e) => {\n            const slideTo = e.target.getAttribute('data-slide-to');\n\n            slideIndex = slideTo;\n            offset = deleteNotDigits(width) * (slideTo - 1);\n\n            slidesField.style.transform = `translateX(-${offset}px)`;\n\n\n            // if(slides.length < 10){\n            //     current.textContent = `0${slideIndex}`;\n            // }else{\n            //     current.textContent = slideIndex;\n            // }\n            slidesCounter();\n\n            // dots.forEach(dot => dot.style.opacity = '.5');\n            // dots[slideIndex - 1].style.opacity = 1;\n            dotSlider();\n        })\n    })\n}\n\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParenSelector, activeClass) {\n    //tabs!\n    //сущности на которые будут навешиваться скрипты\n    const tabs = document.querySelectorAll(tabsSelector),\n        tabsContent = document.querySelectorAll(tabsContentSelector),\n        tabsParent = document.querySelector(tabsParenSelector);\n\n    //скрыть все нужные нам табы\n    function hideTabContent() {\n        tabsContent.forEach(item => {\n            item.classList.add('hide');\n            item.classList.remove('show', 'fade');\n        });\n//удаляем активный признак\n        tabs.forEach(item => {\n            item.classList.remove(activeClass);\n        });\n    }\n\n\n    //функция для показа табы\n\n    function showTabContent(i = 0) {\n        tabsContent[i].classList.add('show', 'fade');\n        tabsContent[i].classList.remove('hide');\n        tabs[i].classList.add(activeClass);\n    }\n\n\n    hideTabContent();\n    showTabContent();\n\n\n    //делегирование событий и назначение обработчика клика\n    tabsParent.addEventListener('click', (event) => {\n        const target = event.target;//если нужно много и часто прописывать event.target\n\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\n            tabs.forEach((item, i) => {\n                if (target == item) {\n                    hideTabContent();\n                    showTabContent(i);\n                }\n            });\n        }\n    });\n}\n\nexport default tabs;","function timer(id, deadline) {\n    //timer!\n\n    function getTimeRemaining(endtime) {//установка таймера\n        let days, hours, minutes, seconds;\n\n        const t = Date.parse(endtime) - Date.parse(new Date());//получим количество милисекунд до нашего времени дедлайн\n            \n        if (t <= 0) {\n            days = 0;\n            hours = 0;\n            minutes = 0;\n            seconds = 0;\n        } else {\n            days = Math.floor(t/(1000*60*60*24)),\n            hours = Math.floor(((t/(1000*60*60)) % 24)),\n            minutes = Math.floor((t/ 1000 / 60)% 60),\n            seconds = Math.floor((t/1000)%60);\n\n        }\n\n            return{\n                'total': t,\n                'days': days,\n                'hours': hours,\n                'minutes': minutes,\n                'seconds': seconds\n            };\n    }\n\n    function getZero(num){\n        if(num >= 0 && num < 10){\n            return `0${num}`;\n        } else {\n            return num;\n        }\n    }\n\n    //функция вывода таймера на страницу\n    function setClock(selector, endtime) {\n        const timer = document.querySelector(selector),\n            days = timer.querySelector('#days'),\n            hours = timer.querySelector('#hours'),\n            minutes = timer.querySelector('#minutes'),\n            seconds = timer.querySelector('#seconds'),\n            timeInterval = setInterval(updateClock, 1000);//обновлять таймер каждую секунду\n\n        updateClock();//добавили чтобы не мигала верстка, так как по умолчанию показыается другой таймер,\n        //сделали чтобы сразу был актуальный, функция запускает лишь раз в этом месте\n\n    //функция которая будет обновлять таймер каждую секунду\n        \n        function updateClock() {\n            const t = getTimeRemaining(endtime);\n\n            days.innerHTML = getZero(t.days);\n            hours.innerHTML = getZero(t.hours);\n            minutes.innerHTML = getZero(t.minutes);\n            seconds.innerHTML = getZero(t.seconds);\n\n            if(t.total <= 0){\n                clearInterval(timeInterval);\n            }\n\n        }\n    }\n    \n    setClock(id, deadline);\n}\n\nexport default timer;","const postData = async (url, data) => {\n    const res = await fetch(url, {\n        method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: data\n    });\n\n    return await res.json();\n};\n\nconst getResources = async (url) => {\n    const res = await fetch(url);\n\n    if(!res.ok){\n        throw new Error(`Couldnt fetch ${url}, status: ${res.status}`);\n    }\n\n    return await res.json();\n};\n\nexport {postData};\nexport {getResources};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//const { off } = require(\"process\");\n\nimport tabs from './modules/tabs';\nimport modalWindow, { openModal } from './modules/modalWindow';\nimport calculator from './modules/calculator';\nimport cards from './modules/cards';\nimport forms from './modules/forms';\nimport slider from './modules/slider';\nimport timer from './modules/timer';\n//import {openModal} from './modules/modalWindow';\n\nwindow.addEventListener('DOMContentLoaded', ()=> {\n\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000);\n\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\n    modalWindow('[data-modal]', '.modal', modalTimerId);\n    calculator();\n    cards();\n    forms('form', modalTimerId);\n    slider({\n        container: '.offer__slider',\n        nextArrow: '.offer__slider-next',\n        prevArrow: '.offer__slider-prev',\n        totalCounter: '#total',\n        currentCounter: '#current',\n        wrapper: '.offer__slider-wrapper',\n        field: '.offer__slide-inner',\n        slide: '.offer__slide'\n\n    });\n    timer('.timer', '2023-11-01');\n\n});\n\n\n//https://attacomsian.com/blog/javascript-object-property-shorthand"],"names":[],"sourceRoot":""}